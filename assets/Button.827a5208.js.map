{"version":3,"file":"Button.827a5208.js","sources":["../../src/components/Button.tsx"],"sourcesContent":["import { Slot } from '@radix-ui/react-slot'; //para mudar componentes de span para outra coisa eu acho\nimport { clsx } from 'clsx'; //NECESSÁRIO INSTALAR (npm install --save clsx)\nimport { ButtonHTMLAttributes, ReactNode } from 'react';\n\n//ButtonHTMLAttributes para poder passar qualquer atributo html além do children informado\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>{\n    children: ReactNode; //string; //desta forma ele pode receber qualquer tipo, string, componente...\n    asChild?: boolean; \n}\n\nexport function Button({ children, asChild, className, ...props }: ButtonProps){ //quando não informar nada vai usar o md como padrão\n    const Comp = asChild ? Slot : 'button'; //caso esteja recebendo asChild vou usar slot, se não usa o span\n    return (\n        <Comp \n            className={clsx(\n                //por causa do tailwind utilizamos REM ao invés de PIXEL, então aqui a cada 1 rem temos 4 pixel\n                'py-3 px-4 bg-azul-500 rounded font-semibold text-preto text-sm w-full transition-colors hover:bg-azul-300 focus:ring-2 ring-white',\n                className,\n                //w-full é para o botão ocupar a tela toda\n               //transition é para alterar a cor de forma degrade \n               //focus para ter um efeito quando o foco esta no botao\n            )}\n            {...props}\n            >\n                {children}\n            </Comp> \n    )\n}"],"names":["Button","children","asChild","className","_jsx","Slot","clsx","props","__name"],"mappings":"qNAUO,SAAAA,EAAA,CAAgB,SAAAC,EAAEA,QAAAA,EAAUC,UAAAA,KAASC,CAAiC,EAAA,CAEzE,OAAAC,EADAF,EAAAG,EAAA,SACA,CACS,UAAAC,EACUA,oIAEPH,CACAA,EAGD,GAAAI,EAECA,SAAAA,CAAK,CAAA,CAKrB,CAjBOC,EAAAR,EAAA"}